{"version":3,"file":"static/js/393.2b4a2899.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.js","components/Filter.js","components/ContactsList/ContactsList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","redux/contacts/selectors.js","components/ContactsList/ContactsList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormWrapper = styled.form`\n    display: flex;\n    flex-direction: column;\n    border: 1px solid gray;\n    padding: 16px;\n    border-radius: 4px;\n    margin-top: 16px;\n    margin-bottom: 32px;\n`;\n\nexport const NameInput = styled.input`\n    margin-bottom: 8px;\n`;\n\nexport const ContactsFormBtn = styled.button`\n    width: 120px;\n    margin-top: 32px;\n    border: 2px solid lightgray;\n    border-radius: 4px;\n    &:hover {border: 2px solid springgreen};\n`;","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport {\n    FormWrapper,\n    NameInput,\n    ContactsFormBtn,\n} from \"./Form.styled.js\";\n\nexport const ContactsForm = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = e => {\n        const {name, value} = e.currentTarget;\n        switch (name) {\n            case 'name':\n              setName(value);\n              break;\n      \n            case 'number':\n                setNumber(value);\n              break;\n      \n            default:\n              return;\n        }    \n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const contact = {name, number};\n        dispatch(addContact(contact));\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n    \n    return (\n        <FormWrapper\n        onSubmit={handleSubmit}\n        > \n            <p>Name</p>\n            <NameInput\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleChange}\n            />\n            <p>Phone number</p>\n            <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleChange}\n            />\n            <ContactsFormBtn\n            type=\"submit\" \n            >\n                Add contact\n            </ContactsFormBtn>\n        </FormWrapper>\n    )\n}","import { useDispatch, useSelector } from \"react-redux\"\nimport { change } from 'redux/filterSlice'\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.filter)\n    return(\n        <label\n        style={{\n            display:\"flex\",\n            flexDirection:\"column\",\n            border: \"1px solid gray\",\n            padding: \"16px\",\n            borderRadius: \"4px\",\n            marginTop: \"16px\",\n        }}>\n            Find contact by name \n            <input \n                type=\"text\" \n                value={filter}\n                onChange={e => dispatch(change(e.target.value))}\n            ></input>\n        </label>\n    )\n}","import styled from 'styled-components';\nimport { Spinner } from 'theme-ui';\n\nexport const ContactList = styled.ul`\n    padding: 16px;\n`;\n\nexport const Spin = styled(Spinner)`\n    stroke: grey;\n`;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n    margin-bottom: 8px;\n    border-bottom: 2px solid lightgray;\n    display: flex;\n    justify-content: space-between;\n    &:hover,\n    &:focus {\n        border-bottom: 2px solid springgreen;\n    };\n\n`;\n\nexport const DelContactBtn = styled.button`\n    width: 16px;\n    height: 16px;\n    border: none;\n    background-color: transparent;\n    padding: 0;\n    cursor: pointer;\n    &:hover .delContactBtnIcon,\n    &:focus .delContactBtnIcon {\n        fill: tomato;\n        transform: scale(1.25);\n    };\n`;\n\n","import { MdClose } from \"react-icons/md\";\nimport {\n    ContactItem,\n    DelContactBtn,\n} from \"./ContactListItem.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nexport const ContactListItem = (contact) => {\n    const { id, name, number } = contact;\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id))\n\n    return(\n        <ContactItem key={id}>\n            <label>{`${name}: ${number}`}</label>\n            <DelContactBtn\n                type=\"button\"\n                onClick={handleDelete}\n                >\n                <MdClose className=\"delContactBtnIcon\"/>\n            </DelContactBtn>\n        </ContactItem>\n    );\n};","export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;","import { useSelector } from \"react-redux\";\nimport { ContactList, Spin } from \"./ContactsList.styled\";\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\nimport { selectAllContacts } from \"redux/contacts/selectors\";\n\nexport const ContactsList = () => {\n    const contacts = useSelector(selectAllContacts);\n    const filter = useSelector(state => state.filter);\n    const selectLoading = false;\n    const filteredContacts = contacts?.filter(item =>\n            item.name.toLowerCase().includes(filter.toLowerCase()));\n    \n    return(\n        <>\n            {selectLoading ? (\n                <Spin />\n            ) : (\n                <ContactList>\n                    {filteredContacts?.map(contact => (\n                        <ContactListItem key={contact.id} {...contact} />\n                    ))}\n                </ContactList>\n            )}\n        </>\n    )\n}","import { Box, Spinner } from 'theme-ui';\nimport { ContactsForm } from \"components/Form/Form\";\nimport { Filter } from 'components/Filter';\nimport { ContactsList } from \"components/ContactsList/ContactsList\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts(){\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading)\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n  return (\n    <>\n      <Box sx={{ maxWidth: 640, py: 16, mx: 'auto'  }}>\n        <Box sx={{ display: 'flex', gap: 16 }}>\n          <h2>Phonebook</h2>\n          {isLoading && <Spinner width=\"24px\" height=\"24px\"/>}\n        </Box>\n        \n        <ContactsForm />\n        <h3 style={{ marginBottom: \"16px\" }}>Contacts</h3>\n        <Filter />\n        <ContactsList />\n        \n      </Box>\n    </>\n  ) \n}"],"names":["FormWrapper","styled","NameInput","ContactsFormBtn","ContactsForm","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","contact","addContact","type","pattern","title","required","onChange","Filter","filter","useSelector","state","style","display","flexDirection","border","padding","borderRadius","marginTop","change","target","ContactList","Spinner","ContactItem","DelContactBtn","ContactListItem","id","onClick","deleteContact","className","selectLoading","contacts","isLoading","selectAllContacts","items","ContactsList","filteredContacts","item","toLowerCase","includes","map","Contacts","useEffect","fetchContacts","sx","maxWidth","py","mx","gap","width","height","marginBottom"],"sourceRoot":""}